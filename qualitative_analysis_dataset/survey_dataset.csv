D1,D2,D3,D4,D5,D6,SQ1,SQ2,SQ3,SQ3_6_TEXT,SQ4_1,SQ4-E,SQ5,SQ6_1,SQ6-E,SQ7,SQ7_2_TEXT,SQ7_3_TEXT,SQ8_1,SQ8-E,SQ9_1,SQ9-E,SQ10_1,SQ10-E,SQ11_1,SQ11-E,SQ12_1,SQ12-E,SQ13_1,SQ13-E
How many years of professional experience do you have in software development?,How many years of experience do you have in developing serverless applications?,What is your current occupation?,What is the highest level of education you have completed?,What was your major?,What is your latest role in software development?,Have you experienced inefficient cold-start issues in Serverless applications?,How does cold-start latency affect your serverless application's performance and user experience?,"Based on your experience, what type of cold-start inefficiency do you encounter most? - Selected Choice","Based on your experience, what type of cold-start inefficiency do you encounter most? - Other (please specify) - Text",How useful do you find InitScope in identifying inefficient library initialization in Serverless applications? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,"Have you used other tools for similar purposes? If so, how does InitScope compare?",How do you rate InitScope's integration into the CI/CD pipeline? i.e. will it comes handy for developers? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,Do you think InitScope would perform effectively for larger serverless applications? Why or why not? - Selected Choice,"Do you think InitScope would perform effectively for larger serverless applications? Why or why not? - Yes, I do - Text",Do you think InitScope would perform effectively for larger serverless applications? Why or why not? - No - Text,How helpful are the various types of views offered by the InitScope visualizer? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,How helpful do you find the calling context information provided by InitScope in optimizing inefficient library usage? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,How effective is InitScope visualizer in highlighting libraries ranked based on their overhead and utilization? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,How would you assess the overhead introduced by InitScope in its default setting (approximately 10% on average)? - 1,Why did you choose the above rating? Please explain concisely in one sentence.,"Overall, how satisfied you are with InitScope's contribution in optimizing cold-start latency in Serverless applications? - 1",Why did you choose the above rating? Please explain concisely in one sentence.,Will you consider using InitScope while developing Serverless applications if you get the tool for free without any conditions? - 1,Why did you choose the above rating? Please explain concisely in one sentence.
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,Software developer focusing on kolla-ansible,Bachelors,Mechanical Engineering,Junior software developer,,,,,,,,,,,,,,,,,,,,,,,,
5-10 years,1-3 years,Software developer,Bachelors,Computing and Infomatics,Software engineer,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,Senior Backend Engineer,Masters,BA Computer Engineering & Master in Software Engineering,Senior Backend Engineer at Contentsquare ,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,PhD Student,Bachelors,Software Engineering,Mobile Software Engineer,"Yes, I have experienced cold-start issues",Minimal Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime",,Useful,Developers can easily find out optimization related bugs.,No,Useful,Can analyze code changes automatically for potential inefficiencies reducing the manual efforts.,"Yes, I do",Its ability to trace individual function calls aids in debugging complex workflows,,Useful,"Provide developers with detailed insights into module efficiency, usage patterns, and import times that have led to significant improvements.",Useful,Gives developers a priority list of libraries for optimization.,Neural,Not familiar with the visualizer.,Very useful,"During development and testing phases, a 10% overhead is generally negligible and well worth the insights gained.",Very useful,"dynamic profiling, providing more accurate and actionable insights than static analyzer.",Very useful,"The inefficiency related problems can be easily parsed and visualized, facilitating analysis and decision-making."
5-10 years,1-3 years,PhD Student,Masters,Computer and Information Science,Software Developer,"Yes, I have experienced cold-start issues",Significant Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Very useful,InitScope can identify the libraries that takes long time for initialization but not used at runtime,"No, I have not used other tools before",Very useful,"The integration only requires the developer to write a Makefile, which is commonly known by developers without any other specific efforts","Yes, I do",Larger serverless applications usually involve more libraries and the benefits of InitScope would be more obvious,,Useful,"The visualizer can display farily enough frequently recognized types of views such as CCT, module tree and dynamic import",Very useful,The calling context information can be used to identify the hot spot of a serverless application,Useful,The ranking can help developers to know better about the performance bottleneck of applications,Useful,10% of average overhead would okay for most applications but might be a issue for latency-sensitive applicaitons,Very useful,InitScope can automatically identify and categorize the problematic libraries so that help developers to fix them in a more cost-effecitvely way,Very useful,"The tools works well itself and is also free, which motivate more developers to try it."
>10 years,3-5 years,Software Engineer,Masters,Computer Science,"General Manager, Technical","Yes, I have experienced cold-start issues",Moderate Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality,Other (please specify)",Importing libraries used for debugging but  not used at runtime,Very useful,"It helps identify several type of inefficiencies, helps removing, upgrading or replacing libraries that reduce cold start time",No. But InitScope seems promising,Very useful,"Identifying serverless application's latency due to cold-start at early stage helps ensuring end-user satisfaction, and minimizes cost due to  CPU consumption","Yes, I do",I didn't see any issue integrating InitScope with comparatively larger  project. The only thing needs to be taken care is that some runtime behavior is hard to detect and may produce false positive result.,,Useful,"The views are helpful as they pinpoint areas where libraries are used inefficiently, providing insightful information such as the import source, line number, frequency of impact on the cold-start process, and whether the library was actually used. However, adding a visualization alongside the tabular data could provide additional value.",Useful,It helps the call stack similar to Java's Call Stack and helps tracing calls and usages.,Very useful,it clearly tells what percentage of cold-start time a particular library contributed to and whether it was used at all,Useful,The 10% overhead is acceptable given the valuable insights InitScope provides into cold-start issues and library usage.,Useful,"It helps greatly. As it is in its early stage, there are couple of improvement opportunities in the future",Very useful,"Obviously, I'll use InitScope to remove inefficiencies from my serverless application and boost end-user's satisfaction"
1-3 years,1-3 years,Adjunct Lecturer,Bachelors,CSE,Software Engineer,"Yes, I have experienced cold-start issues",Moderate Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Useful,Found almost 80% inefficiency,"No, I have not",Useful,Integration in CI/CD pipeline will always come handy,No,,Have to do more experiments.,Neural,Various types of views were not well understandable,Neural,The result was not always correct,Very useful,The ordering is very helpful,Neural,It may vary application to application,Neural,A mixture of positive and negative,Very useful,Experimenting with these types of tools may help to get new results
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,Software Engineer,Masters,Computer Scinece,Tech Lead,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,>10 years,Software Engineering,Bachelors,,principal engineer,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5-10 years,1-3 years,Programmer Analyst in healthcare industry,Bachelors,Computer Science,Senior Programmer Analyst,"Yes, I have experienced cold-start issues",Minimal Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Useful,The InitScope tool appears to be a good tool for identifying issues that affect boot-up time and improving application startup speed.,No,Useful,"This tool provides useful insights during both the development and deployment stages, where optimizations can be made either automatically or manually without impacting application functionality.","Yes, I do",,,Neural,"Useful, but could use some optimization due to large set of data.",Neural,,Neural,,Neural,,Neural,,Neural,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,system engineer ,Bachelors,Computer science,Developer,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,phd student,Masters,CS,developer,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,Software developer,Bachelors,Computer Science,fullstack developer,"Yes, I have experienced cold-start issues",Moderate Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Very useful,"InitScope helps identify unnecessary library imports and optimize function initialization, reducing cold-start latency",I have used AWS X-Ray for monitoring serverless performance ,Very useful,InitScope's integration into CI/CD can help developers catch inefficient dependencies earlym improving deployment performance,"Yes, I do",InitScope's ability to analyze library initialization can help optimize cold-start latency in larger serverless applications with multiple dependencies,,Very useful,"The visualizer helps identify inefficiencies by providing insights into library usage and cold-start impact, making it easier to optimize functions",Useful,Knowing the calling context helps developers pinpoint inefficient dependencies and optimize function execution time,Useful,"Ranking libraries based on overhead helps prioritize optimizations, reducing unnecessary cold-start delays",Useful,The overhead is reasonable compared to the benefits of optimizing cold-start issues in serverless,Very useful,"InitScope provides valuable insights into cold-start inefficiencies, making it easier to optimize function performance",Useful,"If InitScope is free, it would be a useful addition to my development workflow for optimizing serverless functions"
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,3-5 years,Senior Software Engineer,Bachelors,Computer Science,Senior Software Engineer (Individual Contributor),,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,application engineer,Bachelors,Information Security,infra management,"Yes, I have experienced cold-start issues",Significant Impact,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,,Useful,simplely,no,Very useful,Simplify your work,"Yes, I do",cost effectiveness,,Useful,Good visibility,Useful,Business improvement,Useful,You can see unnecessary libraries,Useful,goodjob,Useful,speed good,Very useful,yes
>10 years,3-5 years,Senior Cloud Architect,Masters,CS,Product Owner for a Public Cloud Service Provider based on OpenStack,No,Moderate Impact,Other (please specify),"It did not really affect me so far, but I am not using the serverless features so often.",Useful,"It's a valid issue, that, once addressed helps to optimize the serverless feature.",no specific ones so far,Useful,The value of decresing ramp-up times is undisputed. The main question is how easy the integration and the mitigation of the delays are.,"Yes, I do",Having some data is always better than having no data.,,Neural,DId not use it so far.,Neural,DId not use it so far.,Neural,DId not use it so far.,Useful,"It's worth the price, and you can turn it off, if performance is realy crucial.",Useful,It's a useful contribution.,Useful,We are constantly looking for improvements in our product quality.
>10 years,,Research Engineer,Ph.D.,Computer Science,Detector Software Engineer,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5-10 years,5-10 years,Software Engineer,Masters,Computer Science,SOftware Engineer,"Yes, I have experienced cold-start issues",Minimal Impact,Other (please specify),Download ml models,Not useful,unused libraries have little effect in our systems,No,Neural,unused libraries have little effect in our systems,"Yes, I do",larger sevices may have lots of dependencies,,Useful,Could be used for identifying issues,Useful,Check caller usage details,Neural,Could be used to reasscess if a library is necessary but may not be feasible to remove a library,Useful,"Can run it for a few days, not a big deal",Useful,"Good to have a tool like this for some applications, but I don' t have such a use case.",Not useful,I don' t have such a use case.
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,>10 years,Senior Principal Solution Architect,Bachelors,Computer science,Still develop software almost on a day to day basis,No,Minimal Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime",,Neural,I haven't tried the tool yet.,No,Neural,I haven't tried the tool yet.,"Yes, I do",Looks like it does a good job.,,Neural,I haven't tried the tool yet.,Neural,I haven't tried the tool yet.,Neural,I haven't tried the tool yet.,Neural,I haven't tried the tool yet.,Neural,I haven't tried the tool yet.,Neural,I haven't tried the tool yet.
>10 years,5-10 years,Startup Founder,Bachelors,Mathimatical Physics,CTO,"Yes, I have experienced cold-start issues",Moderate Impact,"Importing unused libraries,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Useful,"Linting tools already catch some unused modules. Would prefer static profiling over ""live"" whenever possible",No I haven't,Neural,I haven't used it in CI/CD,"Yes, I do","The more small, servers or containers, and them more ""spikey"" the loads are (the perfect usecase for serverless) the more coldstart is an issue",,Useful,Should always sort by the greatest impact first.,Neural,Can be unclear when to init InitScope. May cause warnings from static analysis tools (e.g. all imports together at the top),Useful,Should recommend a reduced or more specific set of imports,Neural,It's fine becasue it doesnt need to be used in prod.,Useful,Haven't done enought research to know if there's better tools out there already!,Useful,"""Consider"", yes. Realistically InitScope is an ""improvement"" and will likely be lower priority than features or bugs"
>10 years,5-10 years,Software Engineer,Masters,Computer Science,Project Manager,"Yes, I have experienced cold-start issues",Moderate Impact,Importing unused libraries,,Useful,It is highly effective in identifying inefficient library initialization in serverless applications.,AWS Lambda,Useful,It can automatically detect inefficient library initialization patterns.,"Yes, I do",it can detect inefficient programming patterns.,,Useful,It provides developers with multiple perspectives.,Very useful,It builds a calling context tree that allows us.,Useful,It provides developers with a priority list of modules.,Neural,It is likely minimal as the tool is designed for efficient dynamic program analysis.,Very useful,It effectively identifies inefficient library initialization patterns.,Very useful,Because it lowers the hurdle for introduction.
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,5-10 years,Software Developer,Masters,Computational Mathematics,Senior Software Engineer,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,Software Engineer,Bachelors,Software Engineering,Software Engineer,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,5-10 years,Director of an IT Consultancy,Masters,Physics,Consultant,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,3-5 years,Chief Technology Officer,Bachelors,EECS,Architect,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,Engineer,Masters,Engineering,Staff Platform Engineer,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,3-5 years,VP ML,Masters,CS,This one,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,Student,Bachelors,Computer Science,Software Engineer Co-op,"Yes, I have experienced cold-start issues",Minimal Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime",,Useful,I am not aware of any existing solutions for the problem statement. Definitely beneficial to have it as part of the CICD pipeline,NA,Useful,I am not aware of any existing solutions for the problem statement. Definitely beneficial to have it as part of the CICD pipeline,"Yes, I do","Larger the application, more the functionalities. More libraries imported in general and hence more changes of a cold start",,Neural,The views can be more user friendly,Neural,Easier to naviage and find usages,Useful,It is doing the needful,Useful,Seems like a reasonable overhead that any application can bare,Useful,Overall it seems like an innovation. And hence could be useful to the developer community,Useful,"Yes, I would definitely give it a try"
>10 years,1-3 years,Software Engineer,,Computer Science,Lead Platform Engineer,"Yes, I have experienced cold-start issues",Moderate Impact,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,,Useful,Automated checks are good to cover inadvertant or unknown use cases of inefficient imports,No,Very useful,"Similar to the SQ4, automation during build to identify issues early is key.","Yes, I do","Had to be completely certain without reviewing the code itself, however if in CI the time required to process becomes less important.",,Useful,,Useful,Helps to identify where an inefficiency stems from.,Useful,,Neural,WIthout trialling I can't make a accurate assesssment.,Useful,,Very useful,Absolutely. I could see this kind of tool also being useful for CLI applications.
>10 years,1-3 years,Software engineer,Masters,Computer scienve,Software engineer,"Yes, I have experienced cold-start issues",Significant Impact,"Importing unused libraries,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Neural,"I am not very familiar with it, but its concept sounds convincing.",I did not use other tools.,Neural,,"Yes, I do",,,Neural,,Neural,,Neural,,Neural,,Neural,,Neural,
>10 years,3-5 years,Software Development Engineer,Masters,Networking and Internet Engineering,Software Development Engineer,"Yes, I have experienced cold-start issues",Moderate Impact,"Importing unused libraries,Default import of rarely used libraries - i.e. library is loaded but rarely used at runtime,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,Avoidable library usage - i.e. use libraries with high overhead which doesn't contribute to the core functionality",,Very useful,InitScope seems user friendly since it categorises the inefficiencies in serverless function initializations and the visualiser offer different view types along with filtering capabilities.,Haven't came across similar tools during my work or used such tools. InitScope seems really promising tool.,Very useful,InitScope's plug and play nature helps in easy and automated analysis and re-profiling the code in CI/CD pipelines.,"Yes, I do","InitScope is already tested with 18 apps from 3 popular benchmarks  4 real-world applications. In my view, this tool looks really promising to profile any app provided its given some soak time and thoroughly vetted.",,Very useful,InitScope offer 3 different view types along with filtering capabilities. Expandable to view sub-packages and modules and also recursive sorting of modules by import time are really helpful to assess app performance.,Useful,Calling context info represents a stack frames which contain sample counts and belong to specific Python modules.,Useful,InitScope shows the library call heirarchy along with its location.,Useful,"Looks like by default , InitScope imposes ~10% overhead. But seems like this can be brought down with further more settings or adjusting sampling frequency. ",Very useful,InitScope is really good tool to assess the cold start latency of server less applications and fix it with CI/CD pipeline which helps in faster shipping of high performance app.,Useful,InitScope profiler's inefficiency categoriser and visualizer is something which really offers momentum while developing serverless apps and helps developers to be more productive.
>10 years,>10 years,programmer,,Electrical Engineering,full stack,"Yes, I have experienced cold-start issues",Significant Impact,Other (please specify),Download database files such as SQLite,Very useful,"In a codebase that is so large that developers change, it is no longer possible to analyze it manually.",Never tried it,Very useful,Automation is a good thing. It saves manpower.,"Yes, I do",It's very worth a try.,,Very useful,A minimalist design that is visually easy to understand,Neural,You won't know until you actually try it and measure the effect.,Very useful,Priorities are clear and good,Very useful,"As a CI resource, I personally think it's acceptable. I don't know how other project members will feel about it.",Very useful,just good job for our energy,Very useful,yes
>10 years,5-10 years,Senior software engineer,Bachelors,Neuroscience,Building observatory software for the SKA radio telescopes,"Yes, I have experienced cold-start issues",Minimal Impact,Library misuse - i.e. use heavier libraries instead of considering lightweight alternatives,,Neural,"I wouldn't use this tool: To be honest, I think ""serverless"" is a meme to get people to overpay for AWS.",Have not used other tools.,Useful,"I suppose if you're stuck with a serverless architecture, this could be a good tool and having it in CI/CD would be nice.",No,,"I don't think anyone should build large ""serverless"" applications.",Useful,Visualizations make it easier to understand the relative impact.,Useful,It's nice to see where these imports are coming from.,Useful,"From the slides, the visualzation looks useful.",Not useful,Paying a 10% performance hit for a profiling tool seems fairly expensive to me.,Neural,I've never used this tool.,Very unuseful,"I think ""serverless"" is kind of an expensive joke for anything except tiny apps that are hardly ever used. We're gone full circle back to FastCGI.. I wouldn't use this tool because I wouldn't pay 100x the cost for compute."
>10 years,1-3 years,Principal Software Engineer ,Masters,Electric engineering and Computer Science ,Tech lead,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,Front-End Software Engineer,Bachelors,Computer Science and Engineering,Front-End Software Engineer,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,technical lead,Masters,computer science ,Team lead,,,,,,,,,,,,,,,,,,,,,,,,
5-10 years,5-10 years,Senior software Engineer ,Bachelors,Electronics and communications,Cloud native full stack development and deployment ,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,5-10 years,Senior Software Engineer,Bachelors,Economics,Senior Software Engineer (current one),,,,,,,,,,,,,,,,,,,,,,,,
>10 years,1-3 years,Software,Masters,CS,VP machine learning ,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,AI Engineer,Bachelors,Computer Science and Engineering,AI Engineer,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
>10 years,3-5 years,ML,Ph.D.,Computational neuroscience,Research ,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,senior software engineer ,Bachelors,information engineering and media,full stack development,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years, Junior Software Developer,Bachelors,Computer Science, Junior Software Developer,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,3-5 years,,Bachelors,,,,,,,,,,,,,,,,,,,,,,,,,,
3-5 years,1-3 years,Software Engineer,Bachelors,Computer Science and Engineering,Write a code and deployment,"Yes, I have experienced cold-start issues",Moderate Impact,,,Neural,"It was previously difficult to track this, but it seems that it can be easily tracked using InitScope.",Not applicable,Very useful,It is useful because it can analyze this every time a new commit is made.,No,,"The paper briefly mentioned this as well, but in large-scale applications, the dependencies between libraries are complex, making issue tracking possible, but the resolution itself could be a challenging problem.",Useful,It is appropriately outputting the necessary information.,Useful,"Previously, tracking this was complex, but it allows for easy tracking.",Useful,"Since it provides the usage rate of each node through various metrics, it is useful for analysis.",Neural,"Honestly, I am not able to properly evaluate this. I think it would be better if there were a clearer basis for the 10%.",Very useful,"As mentioned above, it analyzes the usage rate of each node in the libraries being used, helping to identify which nodes need optimization.",Very useful,"ㅍIt provides sufficient performance and detailed information for easy analysis, supports CI/CD, and can even be used for free—there’s no reason not to use it."
1-3 years,1-3 years,student,Bachelors,Computer Science,software enginner and backend developer,"Yes, I have experienced cold-start issues",Moderate Impact,,,Useful,I think InitScope fill the gap between resource elasticity and real-time performance,no,Useful,"I haven't used it, but I think it is useful ideally","Yes, I do",,,Very useful,I have never seen this kind of service in python before.,Very useful,The content in the slide shows the key step of optimizing.,Very useful,"It could help me optimize the package, I could use the package which occupying a large amount of resources",Neural,"To access the service in any time, it is unavoidably. The key is I could use the service flexibility and donnot to worry the resource expansion under high usage conditions",Useful,"useful, but not useful enough. could you think about to optimize it to the extreme like DJI(A company which was the most outstanding in the Quadcopter unmanned aerial vehicle)?",Very useful,"When I was develop the service which facing the public, I will use it."
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1-3 years,1-3 years,Senior Member of Technical Staff,Bachelors,Computer Science ,Software Engineer,"Yes, I have experienced cold-start issues",Minimal Impact,,,Useful,"I chose a ""useful"" rating because InitScope provides targeted insights into inefficient library initialization during cold starts, which is valuable for optimizing serverless applications, even though the provided information lacks detailed context or evidence.","I’ve used tools like AWS X-Ray and Datadog for monitoring serverless performance, and while they provide broad insights, InitScope stands out for its specific focus on identifying inefficient library initialization during cold starts, making it more targeted for this issue.",Useful,"I chose a ""useful"" rating because InitScope's integration into the CI/CD pipeline can proactively identify and address cold-start issues during development, making it a handy tool for developers to improve serverless application performance.","Yes, I do","Yes, InitScope would likely perform effectively for larger serverless applications because its ability to pinpoint inefficient library initialization during cold starts is scalable and can help optimize performance even as application complexity and size increase.",,Neural,"I chose a neutral rating because, while the various views offered by the InitScope visualizer seem potentially useful, the provided information does not give enough detail or examples to fully assess their effectiveness or practicality in identifying and resolving cold-start issues.",Useful,"I chose a ""useful"" rating because the calling context information provided by InitScope helps developers pinpoint specific areas of inefficient library usage, making it easier to optimize and reduce cold-start latency in serverless applications.",Useful,"I chose a ""useful"" rating because the InitScope visualizer effectively highlights libraries ranked by their overhead and utilization, providing clear insights that help developers prioritize and address inefficiencies in serverless applications.",Useful,"this is reasonable for the value it provides, as the insights gained into inefficient library initialization and cold-start optimization outweigh the minimal performance impact.",Useful,"InitScope effectively contributes to optimizing cold-start latency by identifying inefficient library initialization, though there may still be room for further improvements or additional features to enhance its impact",Very useful,"InitScope provides valuable insights into cold-start latency and inefficient library initialization, making it a highly beneficial tool for optimizing serverless applications, especially when available at no cost and without restrictions."
>10 years,5-10 years,Engineer,Masters,Engineer,Engineer,"Yes, I have experienced cold-start issues",Moderate Impact,,,Useful,It is good if you need to develop a project quickly ,No,Useful,It is good if you need to develop a project quickly ,"Yes, I do",We can use for application/integration test before release,,Neural,It is good if you need to develop a project quickly ,Neural,It is good if you need to develop a project quickly ,Neural,It is good if you need to develop a project quickly ,Neural,It is good if you need to develop a project quickly ,Neural,It is good if you need to develop a project quickly ,Neural,It is good if you need to develop a project quickly 
1-3 years,1-3 years,SRE,Bachelors,Convergence Software,DevOps Engineer,"Yes, I have experienced cold-start issues",Minimal Impact,,,Very useful,InitScope's ability to trace and analyze library initialization makes it a valuable tool for optimizing cold-start performance.,N/A,Very useful,Seamless CI/CD integration ensures continuous optimization and reduces the risk of cold-start issues in production.,"Yes, I do","Yes, InitScope's scalable analysis and visualization capabilities make it suitable for larger applications, though overhead management may become critical.",,Very useful,The diverse views make it easier to understand and address inefficiencies in library initialization.,Very useful,Extremely helpful. The calling context helps identify the root cause of inefficiencies and guides optimization efforts.,Very useful,"Highly effective. The ranking system prioritizes libraries with the highest overhead, enabling focused optimization.",Very useful,Acceptable. A 10% overhead is reasonable given the insights and optimizations it enables.,Very useful,Very satisfied. InitScope significantly aids in reducing cold-start latency and improving application performance.,Very useful,"Yes, I would definitely use InitScope if it were available for free."
3-5 years,3-5 years,Software Engineer,Masters,Computer Science,Senior Software Engineer,"Yes, I have experienced cold-start issues",Moderate Impact,,,Not useful,"Because we are using Go, I think currently InitScope supports only python",No I haven't used any other tools ,Useful,"Since InitScope can be easily integrate into the application , so we can easily integrate into CI/CD pipeline ","Yes, I do",,,Useful,Yes various view help me to view different metrics and help me to diagnose what causing the cold start,Useful,Because most of time the developer doesn't aware of the efficient way to use libraraies so I find it useful,Useful,It will help me to figure out which libraires taking more space and try to optimize for it ,Neural,I will use InitScope in the dev environment so I don't care about the overhead issues,Useful,"I haven't came across any tools doing this , so I find this tool very interesting",Useful,Yes I will give it a shot if you folks develop a support for the Golang applications
>10 years,1-3 years,Founder,Bachelors,Computer Science & Math,Principle Engineer,"Yes, I have experienced cold-start issues",Minimal Impact,,,Useful,This sort of ever-present monitoring in CI/CD is critical.,"No, I haven't experienced acute pain here, so I've never looked, but this is far more advanced than I had imagined the options to look like.",Very useful,"Catching mistakes early is critical; also, you could hook it into the code review process and begin teaching devs to have an intuition on what causes problems.","Yes, I do","I actually don't know. It seems like it would, but it's hard to say without really using it, that's when you learn the critical aspects.",,Neural,They're all codebase-wide analytics; for a CI/CD tool it would be massively more useful to also have a diff-oriented view that focused on what &lt;these 3 git commits&gt; added/removed to the problem,Useful,"It's okay, but I rarely think about import graphs, it' s hard to get into that mindset. I'd rather stay focused on code, and thus it should tell me what changes or lines of code caused latency to increase",Very useful,"e.g. if jinja sucks ass, i have the freedom to go find a different templating engine",Neural,I don't care bc you have to explicitly set PYTHONIMPORTTIME to actually incur the latency; if it's at build time i don't care much,Useful,"I think it would be effective, but could be even more effective if it also focused on diffs",Useful,"I mean, I'd love to, but I'm not sure cold start time is going to be my pain point any time soon"
5-10 years,1-3 years,engineer,Bachelors,physics,engineer,"Yes, I have experienced cold-start issues",Minimal Impact,,,Neural,"The features make sense, but not a total revolution","I have used the Go profiler. The Go compiler compains about unused imports, similar to what InitScope does",Useful,CI integration removes mistakes,"Yes, I do",I don't see any fundamental reason why it wouldn't,,Useful,visualizations are often a must during profiling,Useful,call stacks are always useful,Useful,this info is usually hard to identify by hand,Neural,"ideally, a profiler's overhead should be around 1%, based on my experience with Go",Useful,"this is a real problem with Python, so tools to help with this are welcomed",Neural,"I'd love to, but the 10% overhead is a bit high"
3-5 years,1-3 years,Student,Bachelors,Computer Engineering,Web3 AI Intern,"Yes, I have experienced cold-start issues",Moderate Impact,,,Useful,Library usage data is what I find a big plus since that is a big contributing factor to most serverless applications,Better in terms of the initiative and efficiency,Useful,It seems lightweight and not too complex to integrate into a pipeline ,"Yes, I do","Call-path profiling, reducing memory usage and library usage patterns",,Useful,It currently shows what all types of visualizations are available which is great and there are some extensions in VSCode which do this but not for serverless applications,Useful,Granular call contexts and guidance for refactoring,Useful,Dynamic insights are great with a clear ranking system,Useful,Reasonable overhead for detailed profiling,Useful,Highly impactful on improving responsiveness and cold-start efficiency ,Very useful,The features offered are detailed and user-friendly which is what a developer needs.
3-5 years,1-3 years,software engineering,Bachelors,electroics and communication engineering,backend software engineer,No,Moderate Impact,,,Useful,Because in a huge old code base this is a pain fix mannualy. And it is the lowest hanging fruit for performance improvement.,I don't remember the tool name now. But I used profiling tools to optimize the build process. The flame graph representation was actually the most helpful. I think as far as InitScope is considered it can add better visualization.,Not useful,As build process improvement is like once a quarter or once a year kind of activity. Not a continuous process. Once fixed we need guidelines/checks so that we don't add heavy libraries. ,"Yes, I do",Because codebase is both old and huge improving build time is a humongous task by mannual debugging.,,Neural,It not completely useful as there is a learning curve to utilize such a data heavy visualization. Simpler graphs or interactive visuals can make it better.,Very unuseful,There is no clear conclusion which I can make from it.,Useful,I can understand the key blockers in the process.,Neural,10% is fine for one off runs. As I am unable to see a usecase in CI/CD for it. But if it is being used in CI/CD 10% is a huge bump.,Neural,"I have to use it for any comments on this question,",Neural,Sure.
>10 years,1-3 years,Software Engineer,Bachelors,Computer Science,Head of Web Depertment,"Yes, I have experienced cold-start issues",Minimal Impact,,,Neural,I use only those libraries that are necessary. I'm very careful about that.,I don't use libraries like that.,Neural,I don't use libraries like that.,"Yes, I do",Possibly useful for large projects.,,Neural,I don't use such a function.,Neural,Functionality not related to the problem the application solves.,Useful,"This feature works well, but overall it's not that important.",Neural,"Too big. On small projects, more harm than good.",Neural,"There's a problem, but I can't assess the contribution.",Very unuseful,No.
1-3 years,1-3 years,Data Scientist,Bachelors,Data Science and Artificial Intelligence,Data Scientist,"Yes, I have experienced cold-start issues",Moderate Impact,,,Useful,"I chose the rating based on the overall quality, relevance, and accuracy of the content in meeting expectations effectively.","Yes, I've used similar tools; InitScope stands out for its speed, user-friendly interface, and advanced analytics, outperforming alternatives.",Useful,"InitScope integrates seamlessly into the CI/CD pipeline, providing real-time insights and automation, making it highly useful for developers.","Yes, I do","Yes, InitScope would perform effectively for larger serverless applications due to its robust analytics, scalability, and ability to pinpoint bottlenecks efficiently.",,Useful," I chose the rating based on the visualizer’s ability to simplify complex data, making troubleshooting and optimization significantly easier.",Useful,"I chose the rating because the detailed context enables precise troubleshooting, reducing latency and improving serverless application performance.",Useful," I chose the rating because its clear ranking system prioritizes actionable insights, simplifying performance improvement efforts for developers.",Useful,I chose the rating because the trade-off between minimal overhead and comprehensive performance analysis makes it a worthwhile tool for developers.,Useful,"I chose the rating because InitScope effectively reduces cold-start latency through targeted optimizations, leading to improved performance and user experience.",Useful,I chose the rating because InitScope provides valuable performance insights that can significantly enhance serverless application development and optimization.
